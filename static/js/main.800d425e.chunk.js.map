{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleSearch","type","onChange","autoFocus","App","e","setState","searchField","target","value","state","fetch","then","res","json","this","filteredMonsters","filter","toLowerCase","includes","console","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,0BACHJ,UAAU,cAEZ,6BAAKD,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,W,MCETC,MAVf,SAAkBR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAACL,EAAD,CAAuBK,QAASA,GAArBA,EAAQC,U,YCLZ,SAASM,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACE,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,EACVZ,UAAU,YACVe,WAAW,I,ICLIC,E,kDACnB,aAAe,IAAD,8BACZ,gBAaFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAChB,GAAD,OAAc,EAAKU,SAAS,CAAEV,SAAUA,S,+BAOxC,IAAD,EAC2BmB,KAAKL,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAEZS,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACvCA,EAAQE,KAAKyB,cAAcC,SAASZ,EAAYW,kBAGlD,OADAE,QAAQC,IAAIL,GAEV,sBAAK5B,UAAU,MAAf,UACE,cAACU,EAAD,CACEC,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCKM,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.800d425e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.style.css';\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        className=\"card__img\"\r\n      />\r\n      <h1>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './CardList.style.css';\r\n\r\nfunction CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './SearchBox.style.css';\r\n\r\nexport default function SearchBox({ placeholder, handleSearch }) {\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleSearch}\r\n      className=\"searchBar\"\r\n      autoFocus={true}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport CardList from './components/CardList/CardList';\nimport './App.css';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((res) => res.json())\n      .then((monsters) => this.setState({ monsters: monsters }));\n  }\n\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    console.log(filteredMonsters);\n    return (\n      <div className=\"App\">\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleSearch={this.handleSearch}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}